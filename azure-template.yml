parameters:
  name: ''
  vmImage: ''
  toolchain: 'stable'
  features: 'all'

jobs:
- job: ${{ parameters.name }}
  pool: 
    vmImage: ${{ parameters.vmImage }}
  variables:
    tc: ${{ parameters.toolchain }}
    os: ${{ parameters.vmImage }}
    features: ${{ parameters.features }}
  steps: 
  - bash: |
      if [[ "$OS" == "xcode9-macos10.13" ]]; then
        HOMEBREW_NO_AUTO_UPDATE=1 brew install libsodium pkg-config
      fi
      if [[ "$OS" == "ubuntu-16.04" ]]; then
        sudo apt-get install -y --allow-downgrades libsodium-dev libssl-dev=1.0.2g-1ubuntu4.14
      fi
    displayName: 'Install dependencies'

  - bash: |
      curl -o rustup-init.sh https://sh.rustup.rs -sSf
      sh rustup-init.sh --default-toolchain $(tc) -y
    displayName: 'Install Rust'

  - bash: | 
      export CARGO_TARGET_DIR="$HOME/shared_target"
      source $HOME/.cargo/env
      if [[ "$(features)" == "all" ]]; then
        cargo build --all-features
      else
        cargo build --no-default-features --features "$(features)"
      fi
    displayName: 'Build Serenity'

  - bash: |
      export CARGO_TARGET_DIR="$HOME/shared_target"
      source $HOME/.cargo/env
      if [[ "$(features)" == "all" ]]; then
        cargo test --all-features
      else
        cargo test --no-default-features --features "$(features)"
      fi
    displayName: 'Test Serenity'


- job: 'Build examples'
  pool: 
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      01_basic_ping_bot:
        SERENITY_EXAMPLE: '01_basic_ping_bot'
      02_transparent_guild_sharding:
        SERENITY_EXAMPLE: '02_transparent_guild_sharding'
      03_struct_utilities:
        SERENITY_EXAMPLE: '03_struct_utilities'
      04_message_builder:
        SERENITY_EXAMPLE: '04_message_builder'
      05_command_framework:
        SERENITY_EXAMPLE: '05_command_framework'
      06_voice:
        SERENITY_EXAMPLE: '06_voice'
      07_sample_bot_structure:
        SERENITY_EXAMPLE: '07_sample_bot_structure'
      08_env_logging:
        SERENITY_EXAMPLE: '08_env_logging'
      09_shard_manager:
        SERENITY_EXAMPLE: '09_shard_manager'
      10_voice_receive:
        SERENITY_EXAMPLE: '10_voice_receive'
      11_create_message_builder:
        SERENITY_EXAMPLE: '11_create_message_builder'
  steps:
  - bash: |
      export CARGO_TARGET_DIR="$HOME/shared_target"
      source $HOME/.cargo/env
      if [[ "$(features)" == "all" ]]; then
        cd examples
        cd $dir
        cargo build
      fi
    displayName: 'Build examples'